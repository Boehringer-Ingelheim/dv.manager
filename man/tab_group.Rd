% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tab_group.R
\name{tab_group}
\alias{tab_group}
\title{Create a Tabbed Shiny Module Collection}
\usage{
tab_group(module_list, tab_id)
}
\arguments{
\item{module_list}{A list of modules.}

\item{tab_id}{A string representing the \code{tab_id} of the new module. This must be unique among all IDs}
}
\value{
A list representing a Shiny module that contains:
\itemize{
\item \code{ui}: A function to generate the user interface for the tabset containing all the provided modules.
\item \code{server}: A list of server functions with their corresponding module IDs.
\item \code{module_id}: The ID for the module (provided by \code{tab_id} parameter).
}
}
\description{
\code{tab_group} is a function that groups dv modules in tabsets (see \link[shiny:tabsetPanel]{shiny::tabsetPanel}).
This function is designed to simplify the process of organizing multiple Shiny modules into a single,
visually organized tabset. It allows nested modules.
}
\details{
The function does not make use of \code{namespace} (\code{NS()}) or \code{shiny::moduleServer} to implement traditional Shiny
modules, but creates a tab-like UI structure, making it an aesthetic modification.

Outputs of grouped modules are accessible by using the module id, there is no special change required.

When switching to grouped outputs the full hierarchy of grouped modules should be specified:adae
\code{selected = c("Module Tab", mod_tab = "Nested modules", nested_mod_tab = "Single nested module")}.
}

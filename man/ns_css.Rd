% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils_css.R
\name{ns_css}
\alias{ns_css}
\title{Namespaces the CSS dependency of a \code{{shiny}} tag}
\usage{
ns_css(
  module = NULL,
  disable_css_namespacing = isTRUE(getOption("dv.manager.disable_css_namespacing"))
)
}
\arguments{
\item{module}{\code{{shiny}} module}

\item{disable_css_namespacing}{disables css namespacing and returns the input module unmodified}
}
\description{
By default the scope of all CSS styles is \code{global}. This means a certain CSS style
is applied across the HTML page. This presents some problems when one module styles
override another module styles.
}
\details{
Namespacing CSS addresses this issue by creating special tags that isolate the effect
of CSS to only that namespace.

In some particular cases, css namespacing can create interactions between modules. A disabling flag
is included for those rare cases. This flag can passed explicitly or it will take by default the value
of \code{options("dv.manager.disable_css_namespacing")}.

A detail that every module developer that uses custom css should consider is that when defining
the custom dependency via \code{{htmltools::htmlDependency}} the name of the dependency should start with
\verb{custom-}. For more examples pleasee see the vigniette.
}
\keyword{internal}
